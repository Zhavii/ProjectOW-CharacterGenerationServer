- name: Deploy to VM
        env:
          SSH_USERNAME: ${{ secrets.AZURE_VM_USERNAME }}
          SSH_HOST: ${{ secrets.AZURE_VM_IP }}
        run: |
          # First, let's see what files we're actually including
          find . -type f -not -path "./node_modules/*" -not -path "./.git/*" -ls
          
          # Create tar from root directory to preserve structure
          tar -czf deploy.tar.gz --exclude='node_modules' --exclude='.git' .
          
          # Copy the tar file to the server
          scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no deploy.tar.gz $SSH_USERNAME@$SSH_HOST:~/deploy.tar.gz
          
          # Execute deployment commands
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST "
            set -ex  # Add -x for debugging
            
            # Show current state
            echo 'Current directory contents:'
            ls -la
            
            # Clean up and prepare directories
            rm -rf ~/temp_deploy
            mkdir -p ~/temp_deploy
            cd ~/temp_deploy
            
            # Extract and show files
            tar -xzf ~/deploy.tar.gz
            echo 'Extracted contents:'
            ls -R
            
            # Set up environment with escaped variables
            cat > .env << EOF
            CENTRAL_SERVER=${CENTRAL_SERVER}
            DO_ENDPOINT=${DO_ENDPOINT}
            DO_SPACE_ENDPOINT=${DO_SPACE_ENDPOINT}
            DO_SPACE_ID=${DO_SPACE_ID}
            DO_SPACE_KEY=${DO_SPACE_KEY}
            DO_SPACE_NAME=${DO_SPACE_NAME}
            MONGO_URI=${MONGO_URI}
            PORT=${PORT}
            EOF

            # Show env file contents (excluding sensitive data)
            echo 'Environment file created with these variables:'
            grep -v 'KEY\|URI' .env || true
            
            # Install dependencies
            npm ci --production
            
            # Use rsync instead of mv for more reliable copying
            rsync -av --delete ~/temp_deploy/ ~/myapp/
            
            # Start application with PM2
            cd ~/myapp
            echo 'Final app directory contents:'
            ls -R
            cat app/app.js
            
            NODE_ENV=production pm2 start app/app.js --name app
            pm2 save"